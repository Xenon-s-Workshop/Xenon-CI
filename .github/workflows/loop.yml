name: Xenon-CI

# This workflow gets triggered on push to main branch and manual dispatch
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Environment variables
env:
  GitHubMail: ${{ secrets.GITHUBMAIL }}
  GitHubName: ${{ secrets.GITHUBNAME }}

jobs:
  # First job
  bot1:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@main

      # Set Git Configs & Secrets
      - name: Set Git Configs & Secrets
        run: |
          git config --global user.email ${GitHubMail}
          git config --global user.name ${GitHubName}
          git config --global credential.helper store
          echo "https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
          
      # Clone The XenonBot Repo
      - name: Clone The XenonBot Repo
        run: |
          git clone https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com/${{ secrets.MIRROR_REPOSLUG }} xenonci

      # Running XenonCi
      - name: running XenonCi
        timeout-minutes: 340
        continue-on-error: true
        run: |
          sudo apt update
          sudo apt install wget software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
          sudo apt install python3.9
          cd xenonci
          pip3 install .
          python3 -m telegramma

  # Second job
  bot2:
    runs-on: ubuntu-latest
    steps:
      # Clone The XenonUB Repo
      - name: Clone The XenonUB Repo
        run: |
          git clone https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com/${{ secrets.MIRROR_REPOSLUG2 }} xenonub

      # Running Userbot
      - name: running Userbot
        timeout-minutes: 340
        continue-on-error: true
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install wget software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.9
          sudo apt update && sudo apt upgrade -y \
          && sudo apt install --no-install-recommends -y ca-certificates curl ffmpeg fonts-noto-color-emoji gcc git gnupg libmagickwand-dev libpq-dev mediainfo nano neofetch pv python3 python3-dev python3-lxml python3-pip python3-psycopg2 screen tree unzip virtualenv wget zlib1g libyaml-dev \
          && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && NODE_MAJOR=18 && \
          echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list && \
          sudo apt-get update && sudo apt-get install nodejs -y
          cd xenonub
          sudo apt install chromium-browser
          screen -S catuserbot
          virtualenv venv && source venv/bin/activate && pip3 install -r requirements.txt
          python3 -m userbot


# Third job
  bot3:
    runs-on: ubuntu-latest
    steps:
      # Clone The XenonUB Repo
      - name: Clone The XenonUB Repo
        run: |
          git clone https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com/${{ secrets.MIRROR_REPOSLUG3 }} xenonubext

      # Running Userbot
      - name: running Userbot
        timeout-minutes: 340
        continue-on-error: true
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install redis
          sudo apt install wget software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
          sudo apt install python3.9
          python3 -m venv venv
          cd xenonubext
          pip3 install -U -r re*/st*/optional-requirements.txt
          pip3 install -U -r requirements.txt
          python3 -m pyUltroid

  # Fourth job that depends on the first three jobs
  looper:
    needs: [bot1, bot2, bot3]
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@main

      # Set Git Configs & Secrets
      - name: Set Git Configs & Secrets
        run: |
          git config --global user.email ${GitHubMail}
          git config --global user.name ${GitHubName}
          git config --global pull.rebase false
          git config --global credential.helper store
          echo "https://${GitHubName}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
          
      # Loop Workflow
      - name: Loop Workflow
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/${GITHUB_REPOSITORY} temp
          cd temp || exit 1
          git commit --allow-empty -m "[LOOP] Re-run XenonCI workflow"
          git push -f
